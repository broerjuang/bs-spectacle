// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("bs-jest/lib/js/src/jest.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var S$BsSpectacle = require("../src/components/S.js");
var Cite$BsSpectacle = require("../src/components/Cite.js");
var Code$BsSpectacle = require("../src/components/Code.js");
var Link$BsSpectacle = require("../src/components/Link.js");
var List$BsSpectacle = require("../src/components/List.js");
var Text$BsSpectacle = require("../src/components/Text.js");
var Image$BsSpectacle = require("../src/components/Image.js");
var Quote$BsSpectacle = require("../src/components/Quote.js");
var Table$BsSpectacle = require("../src/components/Table.js");
var Heading$BsSpectacle = require("../src/components/Heading.js");
var CodePane$BsSpectacle = require("../src/components/CodePane.js");
var ListItem$BsSpectacle = require("../src/components/ListItem.js");
var Markdown$BsSpectacle = require("../src/components/Markdown.js");
var TableRow$BsSpectacle = require("../src/components/TableRow.js");
var TableBody$BsSpectacle = require("../src/components/TableBody.js");
var TableItem$BsSpectacle = require("../src/components/TableItem.js");
var BlockQuote$BsSpectacle = require("../src/components/BlockQuote.js");
var GoToAction$BsSpectacle = require("../src/components/GoToAction.js");
var TableHeader$BsSpectacle = require("../src/components/TableHeader.js");
var TestHelpers$BsSpectacle = require("./helpers/TestHelpers.js");
var TableHeaderItem$BsSpectacle = require("../src/components/TableHeaderItem.js");

function s(prim) {
  return prim;
}

var element = ReasonReact.element(/* None */0, /* None */0, Curry.app(BlockQuote$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var BlockQuote = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"BlockQuote",
      /* element */element
    ]);

var element$1 = ReasonReact.element(/* None */0, /* None */0, Curry.app(Cite$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var Cite = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Cite",
      /* element */element$1
    ]);

var element$2 = ReasonReact.element(/* None */0, /* None */0, Curry.app(Code$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */["test"]
        ]));

var Code = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Code",
      /* element */element$2
    ]);

var element$3 = ReasonReact.element(/* None */0, /* None */0, CodePane$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, "js", "console.log('Hi');", /* array */[]));

var CodePane = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"CodePane",
      /* element */element$3
    ]);

var element$4 = ReasonReact.element(/* None */0, /* None */0, GoToAction$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* Some */[(function () {
              return React.createElement("div", undefined);
            })], /* array */[]));

var GoToAction = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"GoToAction",
      /* element */element$4
    ]);

var element$5 = ReasonReact.element(/* None */0, /* None */0, Heading$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[1], /* Some */[/* false */0], /* Some */[1.5], /* array */[]));

var Heading = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Heading",
      /* element */element$5
    ]);

var element$6 = ReasonReact.element(/* None */0, /* None */0, Image$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, "path", /* Some */["alt"], /* Some */["block"], /* Some */["100px"], /* array */[]));

var Image = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Image",
      /* element */element$6
    ]);

var element$7 = ReasonReact.element(/* None */0, /* None */0, Link$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, "link", /* None */0, /* array */[]));

TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Link",
      /* element */element$7
    ]);

var element$8 = ReasonReact.element(/* None */0, /* None */0, Link$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, "link", /* Some */["_blank"], /* array */[]));

TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Link with target",
      /* element */element$8
    ]);

var Link = /* module */[];

var element$9 = ReasonReact.element(/* None */0, /* None */0, List$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[/* true */1], /* Some */[/* true */1], /* Some */[2], /* Some */["A"], /* array */[]));

var List = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"List",
      /* element */element$9
    ]);

var element$10 = ReasonReact.element(/* None */0, /* None */0, Curry.app(ListItem$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var ListItem = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"ListItem",
      /* element */element$10
    ]);

var element$11 = ReasonReact.element(/* None */0, /* None */0, Markdown$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["# Hello"], /* array */[]));

TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Markdown with source",
      /* element */element$11
    ]);

var element$12 = ReasonReact.element(/* None */0, /* None */0, Markdown$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["\n# Hello there\n\n## General Kenobi\n          "]));

TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Markdown with children",
      /* element */element$12
    ]);

var Markdown = /* module */[];

var element$13 = ReasonReact.element(/* None */0, /* None */0, Curry.app(Quote$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var Quote = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Quote",
      /* element */element$13
    ]);

var element$14 = ReasonReact.element(/* None */0, /* None */0, S$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[]));

TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"S",
      /* element */element$14
    ]);

var element$15 = ReasonReact.element(/* None */0, /* None */0, S$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[/* strikethrough */-136827821], /* array */[]));

TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"S with type",
      /* element */element$15
    ]);

describe("S types", (function () {
        Jest.test("strikethrough", (function () {
                return Jest.ExpectJs[/* toEqual */12](/* Some */[/* strikethrough */-136827821], Jest.ExpectJs[/* expect */0](S$BsSpectacle.sTypeFromJs("strikethrough")));
              }));
        Jest.test("underline", (function () {
                return Jest.ExpectJs[/* toEqual */12](/* Some */[/* underline */131142924], Jest.ExpectJs[/* expect */0](S$BsSpectacle.sTypeFromJs("underline")));
              }));
        Jest.test("bold", (function () {
                return Jest.ExpectJs[/* toEqual */12](/* Some */[/* bold */-1055161979], Jest.ExpectJs[/* expect */0](S$BsSpectacle.sTypeFromJs("bold")));
              }));
        Jest.test("italc", (function () {
                return Jest.ExpectJs[/* toEqual */12](/* Some */[/* italic */107228912], Jest.ExpectJs[/* expect */0](S$BsSpectacle.sTypeFromJs("italic")));
              }));
        return Jest.test("should not match", (function () {
                      return Jest.ExpectJs[/* toEqual */12](/* None */0, Jest.ExpectJs[/* expect */0](S$BsSpectacle.sTypeFromJs("sdaf")));
                    }));
      }));

var S = /* module */[];

var element$16 = ReasonReact.element(/* None */0, /* None */0, Curry.app(Table$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var Table = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Table",
      /* element */element$16
    ]);

var element$17 = ReasonReact.element(/* None */0, /* None */0, Curry.app(TableBody$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var TableBody = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"TableBody",
      /* element */element$17
    ]);

var element$18 = ReasonReact.element(/* None */0, /* None */0, Curry.app(TableHeader$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var TableHeader = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"TableHeader",
      /* element */element$18
    ]);

var element$19 = ReasonReact.element(/* None */0, /* None */0, Curry.app(TableHeaderItem$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var TableHeaderItem = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"TableHeaderItem",
      /* element */element$19
    ]);

var element$20 = ReasonReact.element(/* None */0, /* None */0, Curry.app(TableItem$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var TableItem = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"TableItem",
      /* element */element$20
    ]);

var element$21 = ReasonReact.element(/* None */0, /* None */0, Curry.app(TableRow$BsSpectacle.make, [
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* None */0,
          /* array */[]
        ]));

var TableRow = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"TableRow",
      /* element */element$21
    ]);

var element$22 = ReasonReact.element(/* None */0, /* None */0, Text$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[/* false */0], /* Some */[1.5], /* array */[]));

var Text = TestHelpers$BsSpectacle.MakeBasePropsTest(/* module */[
      /* name */"Text",
      /* element */element$22
    ]);

exports.s = s;
exports.BlockQuote = BlockQuote;
exports.Cite = Cite;
exports.Code = Code;
exports.CodePane = CodePane;
exports.GoToAction = GoToAction;
exports.Heading = Heading;
exports.Image = Image;
exports.Link = Link;
exports.List = List;
exports.ListItem = ListItem;
exports.Markdown = Markdown;
exports.Quote = Quote;
exports.S = S;
exports.Table = Table;
exports.TableBody = TableBody;
exports.TableHeader = TableHeader;
exports.TableHeaderItem = TableHeaderItem;
exports.TableItem = TableItem;
exports.TableRow = TableRow;
exports.Text = Text;
/* BlockQuote Not a pure module */
