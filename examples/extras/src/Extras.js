// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var React                           = require("react");
var ReasonReact                     = require("reason-react/src/ReasonReact.js");
var Cite$BsSpectacle                = require("bs-spectacle/src/components/Cite.js");
var Deck$BsSpectacle                = require("bs-spectacle/src/components/Deck.js");
var Notes$BsSpectacle               = require("bs-spectacle/src/components/Notes.js");
var Quote$BsSpectacle               = require("bs-spectacle/src/components/Quote.js");
var Slide$BsSpectacle               = require("bs-spectacle/src/components/Slide.js");
var Theme$BsSpectacle               = require("bs-spectacle/src/Theme.js");
var Heading$BsSpectacle             = require("bs-spectacle/src/components/Heading.js");
var BlockQuote$BsSpectacle          = require("bs-spectacle/src/components/BlockQuote.js");
var ComponentPlayground$BsSpectacle = require("bs-spectacle/src/components/ComponentPlayground.js");

var theme = Theme$BsSpectacle.createTheme(/* record */[
      /* primary */"#26A0D1",
      /* secondary */"white",
      /* tertiary */"#505050",
      /* quarternary */"white"
    ], /* record */[
      /* primary : record */[
        /* name */"Merriweather",
        /* googleFont : true */1,
        /* styles : array */["300"]
      ],
      /* secondary : record */[
        /* name */"Roboto",
        /* googleFont : true */1,
        /* styles : array */["100"]
      ],
      /* tertiary */Theme$BsSpectacle.simpleFont("monospace")
    ]);

function s(prim) {
  return prim;
}

var component = ReasonReact.statelessComponent("Extras");

function customTransition(transitioning, forward, _) {
  var angle = forward !== 0 ? -180 : 180;
  var translateY = transitioning !== 0 ? 100 : 0;
  var rotation = transitioning !== 0 ? angle : 0;
  var transform = "\n    translate3d(0%, " + (String(translateY) + ("%, 0)\n    rotate(" + (String(rotation) + "deg)\n    ")));
  var backgroundColor = transitioning !== 0 ? "#fff" : "#26A0D1";
  return {
          backgroundColor: backgroundColor,
          transform: transform
        };
}

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return ReasonReact.element(/* None */0, /* None */0, Deck$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* Some */[theme], /* Some */[/* array */[
                        /* Zoom */1,
                        /* Slide */0
                      ]], /* None */0, /* None */0, /* None */0, /* array */[
                      ReasonReact.element(/* None */0, /* None */0, Slide$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[/* array */[/* Custom */[customTransition]]], /* None */0, /* None */0, /* None */0, /* None */0, /* array */[
                                ReasonReact.element(/* None */0, /* None */0, Notes$BsSpectacle.make(/* array */[
                                          React.createElement("h1", undefined, "Introduction"),
                                          React.createElement("ol", undefined, React.createElement("li", undefined, "Clap your hands"), React.createElement("li", undefined, "Say yeah"))
                                        ])),
                                ReasonReact.element(/* None */0, /* None */0, Heading$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["secondary"], /* None */0, /* None */0, /* Some */["secondary"], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["Hello, world"]))
                              ])),
                      ReasonReact.element(/* None */0, /* None */0, Slide$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["secondary"], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["It will be overwritten"], /* None */0, /* None */0, /* Some */[/* array */[/* Slide */0]], /* None */0, /* None */0, /* None */0, /* None */0, /* array */[
                                ReasonReact.element(/* None */0, /* None */0, Notes$BsSpectacle.make(/* array */["Overwriting notes from props"])),
                                ReasonReact.element(/* None */0, /* None */0, BlockQuote$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[
                                          ReasonReact.element(/* None */0, /* None */0, Quote$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["Itâ€™s easy, see..."])),
                                          ReasonReact.element(/* None */0, /* None */0, Cite$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["Unknown"]))
                                        ]))
                              ])),
                      ReasonReact.element(/* None */0, /* None */0, Slide$BsSpectacle.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["secondary"], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[ReasonReact.element(/* None */0, /* None */0, ComponentPlayground$BsSpectacle.make(/* Some */["\nlog(\"This log is provided thanks to SCOPE!\")\n\nconst styles = {\n  heading: {\n    fontSize: \"2.25rem\",\n    fontWeight: \"bold\"\n  }\n}\n\nconst HelloWorld = ({ name }) => (\n  <div>\n    <h1 style={styles.heading}>\n      Create Live Code Examples in {name}!\n    </h1>\n  </div>\n)\n\nrender(<HelloWorld name=\"Spectacle\" />)\n         "], /* Some */["#26A0D1"], /* Some */[/* Light */0], /* Some */[{
                                            log: (function (msg) {
                                                console.log("FROM REASON:", msg);
                                                return /* () */0;
                                              })
                                          }], /* array */[]))]))
                    ]));
    });
  return newrecord;
}

exports.theme            = theme;
exports.s                = s;
exports.component        = component;
exports.customTransition = customTransition;
exports.make             = make;
/* theme Not a pure module */
